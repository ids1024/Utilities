#!/bin/env python

import os
import sys
import argparse

from importlib.machinery import SourceFileLoader

os.chdir(os.path.expanduser('~'))

conf = SourceFileLoader("conf", os.path.expanduser("~/.xinitrc.py")).load_module()
envs = [i[0] for i in conf.environments]

argparser = argparse.ArgumentParser(description='Python based xinit wraper.')
argparser.add_argument('environment', metavar='ENVIRONMENT' ,help='environment to load',nargs='?',choices=envs)
argparser.add_argument('-l','--list', action='store_true', help='list available environments')
args = argparser.parse_args()

if args.list:
    for i in enumerate(envs):
        print(*i)
    try:
        envnum = int(input("Environment: "))
    except ValueError:
        sys.exit("Not a number.")
    except KeyboardInterrupt:
        sys.exit("Xstart cancelled by user.")
    if not (0 <= envnum < len(envs)):
        sys.exit("Invalid index.")


elif args.environment:
    envnum = envs.index(args.environment)
else:
    envnum = envs.index(conf.default_environment)


display = 0
while os.path.exists("/tmp/.X{0}-lock".format(display)):
    display += 1

client="/home/ian/Devel/Utilities/bin/ianxenvstart.py"

os.execlp("xinit", "xinit", client, str(envnum), "--", "/bin/X", ':'+str(display))
